class Solution:
    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:
        left = 0
        right = 0
        max_window = []
        max_indices = deque()

        if len(nums) > 0:
            while right < len(nums):
                # Remove elements from the front of max_indices that are out of the current window
                while max_indices and max_indices[0] < left:
                    max_indices.popleft()
                
                # Add the current element's index to max_indices while maintaining a decreasing order
                while max_indices and nums[max_indices[-1]] < nums[right]:
                    max_indices.pop()
                max_indices.append(right)

                # Check if the leftmost element is out of the current window
                if left > max_indices[0]:
                    max_indices.popleft()

                # Append the maximum value in the current window to max_window
                if right - left + 1 >= k:
                    max_window.append(nums[max_indices[0]])
                    left += 1
                right += 1

        return max_window
        